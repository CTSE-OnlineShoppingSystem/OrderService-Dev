name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Scripts
        run: |
          docker build -t order-service-dev .
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}
          docker tag order-service-dev minindukothalawala/ctseorderervice
          docker push minindukothalawala/ctseorderervice

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Run below command in azure cli
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: ${{secrets.AZURE_CREDENTIALS}}
          # Resource Group Name
          resource-group: CTSE-Microservice
          # AKS Cluster Name
          cluster-name: ctse-microservice
          
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1
        with:
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: ${{secrets.DOCKER_USERNAME}}
          # Container registry password
          container-registry-password: ${{secrets.DOCKER_TOKEN}}
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret
          
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1.3
        with:
          # Path to the manifest files which will be used for deployment.
          manifests: |
            deployment.yaml
            service.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: ${{secrets.DOCKER_USERNAME}}/ctseorderervice
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          # deploy/promote/reject
          action: deploy
